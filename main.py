import os\\\nfrom colorama import Fore\\\\\n\\\\\nfrom src.api import RedAPI, OpsAPI\\\\\nfrom src.args import parse_args\\\\\nfrom src.config import Config\\\\\nfrom src.scanner import scan_torrent_directory, scan_torrent_file\\\\\nfrom src.webserver import run_webserver\\\\\n\\\\\ndef cli_entrypoint(args):\\\\\n  try:\\\\\n    config = Config().load(args.config_file) if args.config_file else Config()\\\\\n    red_api, ops_api = __verify_api_keys(config)\\\\\n\\\\\n    if args.server:\\\\\n      run_webserver(args.input_directory, args.output_directory if args.output_directory else config.default_output_directory, red_api, ops_api, port=config.server_port)\\\\\n    elif args.input_file:\\\\\n      print(scan_torrent_file(args.input_file, args.output_directory if args.output_directory else config.default_output_directory, red_api, ops_api))\\\\\n    elif args.input_directory:\\\\\n      print(scan_torrent_directory(args.input_directory, args.output_directory if args.output_directory else config.default_output_directory, red_api, ops_api))\\\\\n  except Exception as e:\\\\\n    print(f"{Fore.RED}{str(e)}{Fore.RESET}")\\\\\n    exit(1)\\\\\n\\\\\ndef __verify_api_keys(config):\\\\\n  red_api = RedAPI(config.red_key)\\\\\n  ops_api = OpsAPI(config.ops_key)\\\\\n\\\\\n  try:\\\\\n    red_api.announce_url\\\\\n    ops_api.announce_url\\\\\n  except Exception as e:\\\\\n    print(f"{Fore.RED}API key verification failed: {str(e)}")\\\\\n    exit(1)\\\\\n\\\\\n  return red_api, ops_api\\\\\n\\\\\n\\\\\nif __name__ == "__main__":\\\\\n  args = parse_args()\\\\\n\\\\\n  try:\\\\\n    cli_entrypoint(args)\\\\\n  except KeyboardInterrupt:\\\\\n    print(f"{Fore.RED}Exiting...{Fore.RESET}")\\\\\n    exit(1)